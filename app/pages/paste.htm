<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>index.htm</title>
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<style>
html, body, div, span, img, a, canvas, pre {
    box-sizing: border-box;
}
</style>


<script type="text/javascript" src="/util.js"></script>
<script type="text/javascript" src="/google_api_library.js"></script>


</head>
<body>
<style>
#login, #clear_clips, #file_label {
    border: 1px solid #aaa;
    border-radius: 2px;
    width: 120px;
    height: 70px;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin: 0;
}
#login:hover,
#clear_clips:hover,
#file_label:hover {
    /*
    transform: translateY(1px);
    */
    background: #fafafa;
}

#clip_canvas {
    border: 1px solid #aaa;
}

#file_upload {
    display: none;
}

</style>


<input id="file_upload" type="file" accept="*/*" multiple="false"/>

<span id="login">login</span
><span id="file_label">select file</span
><span id="clear_clips">clear clips</span
><br />
<h5>selected</h5>
<canvas id="clip_canvas"></canvas><br />

<script>
const file_upload = document.getElementById("file_upload");
const clear_clips = document.getElementById("clear_clips");
const file_label = document.getElementById("file_label");



file_label.addEventListener("click", e => {
    // upload button listener
    file_upload.click();
});
file_upload.addEventListener("change", e => {
    const f = file_upload.files[0];
    if(!f) return;
    f.readAs("buffer").then(buf => {
        console.log("buffer:", buf);
        console.log('<input type="file"> received object File(' +
            `name=${f.name}, type=${f.type}, size=${f.size}), ` +
            `head(100)=${ // base64
                btoa(String.fromCharCode(...new Uint8Array(buf.slice(0,100))))
            }`);
        pasteClip(buf, f.type, f.name);
    });
});

clear_clips.addEventListener("click", e => {
    
});


window.addEventListener("paste", function onPaste(e){
    function printInfo(i, t, s){
        if(s.length > 60){
            s = s.slice(0, 60) + "...";
        }
        console.log(`paste item #${i} <${t}>: ${s}`);
    }

    var data = (e.clipboardData ||
            e.originalEvent && e.originalEvent.clipboardData);
    var items = data && data.items;

    if(!items || !items.length){
        console.warn("paste event triggered but no items received");
        return;
    }

    for(const [i, item] of Array.prototype.entries.call(items)){
        if(item.kind === "string" && item.type.match(/^text/)){
            new Promise(resolve => item.getAsString(resolve)
            ).then(pasted_string => {
                printInfo(i, "string", pasted_string);
                pasteClip(pasted_string);
            });
        } else if(item.kind == "file"){
            var f = item.getAsFile();
            f.readAs("buffer").then(buf => {
                printInfo(i, "file<buffer>", buf);
                pasteClip(buf, f.type, f.name);
            });
        }
    }
});


function showImage(data){
    const cvs = document.getElementById("clip_canvas");
    const ctx = cvs.getContext("2d");
    const _URL = window.URL || window.webkitURL;
    const url = _URL.createObjectURL(new Blob(
            [new Uint8Array(data)], // { type: "text/plain" }
    ));

    const img = new Image();

    console.log("pasteClip(): created object url:", url);

    new Promise((resolve, error) => {
        img.addEventListener("load", resolve);
        img.addEventListener("error", error);
        img.src = url;
    }).then(e => {
        console.assert(this === window);
        console.assert(e.target === img);

        cvs.style.maxWidth = "100%";
        cvs.style.height = "auto";
        cvs.width = img.width;
        cvs.height = img.height;

        ctx.drawImage(img, 0, 0);
    }).catch(e => {
        console.error(e);
        console.error("loadImage(): image loading failed; url:", url);
    });
}

function pasteClip(data, type, name){


    if(type.match(/^image/)){
        console.log("pasteClip(): received image, loading");

        showImage(data);
        addPasteItem(data, type, name);
    } else{

    }
}

document.addEventListener("load", e => {
    console.log("document laoded");
});


console.log(`"onhashchange" in window: ${"onhashchange" in window}`);
window.addEventListener("hashchange", (e) =>{
  console.log("hash: " + window.location.hash);
}, false);
console.log(`window.onhashchange: ${window.onhashchange}`);
window.location.hash = "HI";
</script>
</body>
</html>